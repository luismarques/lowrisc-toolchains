# Azure Pipelines CI build configuration
# Documentation at https://aka.ms/yaml

variables:
  # commit reference in https://github.com/riscv/riscv-gnu-toolchain
  RISCV_GNU_TOOLCHAIN_COMMIT_ID: 2e334e222d43bcde237c289385c977dcab81eda9

trigger:
  batch: true
  branches:
    include:
    - 'master'
  tags:
    include:
    - '*'
pr:
  branches:
    include:
    - '*'

jobs:
- job: "GCC_Ibex"
  displayName: "RV32IMC GCC (Ibex)"
  pool:
    vmImage: "ubuntu-16.04"
  timeoutInMinutes: 360
  steps:
  - bash: |
      sudo apt-get install -y build-essential autoconf bison flex \
        texinfo help2man gawk libtool-bin libncurses5-dev git libtool \
        gettext wget curl
    displayName: 'Install build dependencies'

  - bash: |
      ./install-crosstool-ng.sh
    displayName: 'Build and install crosstool-ng'

  - bash: |
      # crosstools-NG needs the ability to create and chmod the
      # /tools/riscv directory.
      sudo mkdir -p /tools \
        && sudo chmod 777 /tools \
        && mkdir -p /tools/riscv \
        && ./build-gcc-ibex.sh
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: gcc-ibex
    displayName: "Upload GCC for Ibex as Azure artifact"

  - task: GithubRelease@0
    displayName: 'Upload to GitHub releases'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: lowrisc-artifact-upload
      repositoryName: lowrisc/lowrisc-toolchains
      tagSource: manual
      tag: "$(ReleaseTag)"
      action: edit
      addChangeLog: false
      assetUploadMode: replace
      assets: |
          $(Build.ArtifactStagingDirectory)/*.tar.xz

- job: "GCC_Multilib_Baremetal"
  displayName: "RV64 GCC (Multilib Baremetal)"
  condition: false
  pool:
    vmImage: "ubuntu-16.04"
  timeoutInMinutes: 360
  steps:
  - bash: |
      sudo apt-get install -y build-essential autoconf bison flex \
        texinfo help2man gawk libtool-bin libncurses5-dev git libtool \
        gettext wget curl
    displayName: 'Install build dependencies'

  - bash: |
      ./install-crosstool-ng.sh
    displayName: 'Build and install crosstool-ng'

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-baremetal" \
        "riscv64-unknown-elf" \
        "/opt/riscv-baremetal-toolchain"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: gcc-multilib-baremetal
    displayName: "Upload GCC for Multilib Baremetal as Azure artifact"

  - task: GithubRelease@0
    displayName: 'Upload to GitHub releases'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: lowrisc-artifact-upload
      repositoryName: lowrisc/lowrisc-toolchains
      tagSource: manual
      tag: "$(ReleaseTag)"
      action: edit
      addChangeLog: false
      assetUploadMode: replace
      assets: |
          $(Build.ArtifactStagingDirectory)/*.tar.xz

- job: "GCC_Multilib_Linux"
  displayName: "RV64 GCC (Multilib Linux)"
  pool:
    vmImage: "ubuntu-16.04"
  timeoutInMinutes: 360
  steps:
  - bash: |
      sudo apt-get install -y build-essential autoconf bison flex \
        texinfo help2man gawk libtool-bin libncurses5-dev git libtool \
        gettext wget curl
    displayName: 'Install build dependencies'

  - bash: |
      ./install-crosstool-ng.sh
    displayName: 'Build and install crosstool-ng'

  - bash: |
      ./build-gcc-with-args.sh \
        "lowrisc-toolchain-gcc-multilib-linux" \
        "riscv64-unknown-linux-gnu" \
        "/opt/riscv-linux-toolchain"
    displayName: 'Build GCC toolchain'
    env:
      ARTIFACT_STAGING_DIR: $(Build.ArtifactStagingDirectory)

  - publish: $(Build.ArtifactStagingDirectory)
    artifact: gcc-multilib-linux
    displayName: "Upload GCC for Multilib Linux as Azure artifact"

  - task: GithubRelease@0
    displayName: 'Upload to GitHub releases'
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags/'))
    inputs:
      gitHubConnection: lowrisc-artifact-upload
      repositoryName: lowrisc/lowrisc-toolchains
      tagSource: manual
      tag: "$(ReleaseTag)"
      action: edit
      addChangeLog: false
      assetUploadMode: replace
      assets: |
          $(Build.ArtifactStagingDirectory)/*.tar.xz
